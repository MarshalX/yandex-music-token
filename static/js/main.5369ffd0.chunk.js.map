{"version":3,"sources":["Api.js","AuthForm.js","TrustCard.js","App.js","index.js"],"names":["CLIENT_ID","CLIENT_SECRET","YandexMusicApi","passport_url","auth_sdk_params","generate_token_by_login_and_password","login","password","track_id","captcha_answer","a","start_authentication","send_authentication_password","x_token","captcha_image_url","Captcha","generate_yandex_music_token_by_x_token","url","data","post","res","status","console","log","BadRequest","errors","includes","access_token","serialize","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","fetch","method","body","then","resp","json","Error","AuthForm","props","api","mirror","handleChange","target","name","value","setState","state","handleSubmit","event","preventDefault","captcha_image","undefined","token","window","location","href","catch","error","this","Button","variant","block","className","Form","Group","controlId","Label","column","Control","onChange","type","placeholder","Row","Col","Image","fluid","src","onClick","React","Component","TrustCard","Card","Header","size","icon","Body","Title","title","Text","text","defaultProps","App","Container","Badge","width","roundedCircle","CardDeck","library","add","fab","far","fas","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5369ffd0.chunk.js","sourcesContent":["/**\n * Reference: https://github.com/MarshalX/yandex-music-api/blob/1fc342183ba59e4d1c47b6d8ae5ac6afe46d6a14/yandex_music/client.py#L173\n */\n\nconst CLIENT_ID = '23cabbbdc6cd418abb4b39c32c41195d';\nconst CLIENT_SECRET = '53bc75238f0c4d08a118e51fe9203300';\nconst X_TOKEN_CLIENT_ID = 'c0ebe342af7d48fbbbfcf2d2eedb8f9e';\nconst X_TOKEN_CLIENT_SECRET = 'ad0a908f0aa341a182a37ecd75bc319e';\n\nclass YandexMusicApi {\n    passport_url = 'https://mobileproxy.passport.yandex.net';\n    auth_sdk_params = 'app_id=ru.yandex.mobile.music&app_version_name=5.18&app_platform=iPad'\n\n    generate_token_by_login_and_password = async (login, password, track_id, captcha_answer) => {\n        if (!track_id) {\n            track_id = await this.start_authentication(login);\n        }\n\n        let x_token;\n        try {\n            x_token = await this.send_authentication_password(track_id, password, captcha_answer);\n        } catch (e) {\n            if (!e.captcha_image_url) {\n                throw e;\n            } else {\n                throw Captcha({\n                    captcha_image_url: e.captcha_image_url,\n                    track_id: track_id,\n                });\n            }\n        }\n\n        return await this.generate_yandex_music_token_by_x_token(x_token);\n    };\n\n    start_authentication = async login => {\n        const url = `${this.passport_url}/2/bundle/mobile/start`;\n\n        const data = {\n            'client_id': CLIENT_ID,\n            'client_secret': CLIENT_SECRET,\n            'login': login,\n            'x_token_client_id': X_TOKEN_CLIENT_ID,\n            'x_token_client_secret': X_TOKEN_CLIENT_SECRET,\n        };\n\n        const res = await this.post(url, data);\n        if (!res.status || res.status === 'error') {\n            console.log('throw')\n            throw new BadRequest(res);\n        }\n\n        return res.track_id;\n    };\n\n    send_authentication_password = async (track_id, password, captcha_answer) => {\n        const url = `${this.passport_url}/1/bundle/mobile/auth/password`;\n\n        const data = {\n            'track_id': track_id,\n            'password': password,\n        }\n\n        if (captcha_answer) {\n            data.captcha_answer = captcha_answer;\n        }\n\n        const res = await this.post(url, data);\n\n        const status = res.status || 'error';\n        if (status === 'ok') {\n            return res.x_token;\n        }\n\n        if (res.errors.includes('password.not_matched')) {\n            throw BadRequest('Неправильный пароль');\n        } else if (res.errors.includes('captcha.required')) {\n            throw Captcha({\n                captcha_image_url: res.captcha_image_url,\n                track_id: track_id,\n            });\n        } else if (res.errors.includes('captcha.not_shown')) {\n            throw BadRequest('Капча не была отображена');\n        } else {\n            throw BadRequest(res);\n        }\n\n    }\n\n    generate_yandex_music_token_by_x_token = async x_token => {\n        const url = `${this.passport_url}/1/token/?${this.auth_sdk_params}`\n\n        const data = {\n            'access_token': x_token,\n            'client_id': CLIENT_ID,\n            'client_secret': CLIENT_SECRET,\n            'grant_type': 'x-token',\n        }\n\n        const res = await this.post(url, data);\n\n        if (res.access_token) {\n            return res.access_token;\n        }\n\n        throw BadRequest(res);\n    }\n\n    serialize = (obj) => {\n        let str = [];\n        for (let p in obj)\n            if (obj.hasOwnProperty(p)) {\n                str.push(`${encodeURIComponent(p)}=${encodeURIComponent(obj[p])}`);\n            }\n        return str.join('&');\n    };\n\n    post = (url, data) => {\n        return fetch(url, {\n            method: 'POST',\n            body: this.serialize(data),\n        }).then(resp => {\n            return resp.json();\n        });\n    };\n}\n\nclass Captcha extends Error {\n    constructor(body) {\n        super();\n        this.body = body\n    }\n}\n\nclass BadRequest extends Error{\n    constructor(body) {\n        super();\n        this.body = body;\n    }\n}\n\nexport { YandexMusicApi };\nexport { Captcha };\nexport { BadRequest };\n","import { Button, Col, Form, Image, Row } from \"react-bootstrap\";\nimport React from \"react\";\nimport { Captcha, YandexMusicApi } from \"./Api\";\n\n\nclass AuthForm extends React.Component {\n    api = new YandexMusicApi();\n    mirror = 'https://t.me/';\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            track_id: null,\n            login: '',\n            password: '',\n            error: null,\n            token: null\n        };\n    }\n\n    handleChange = ({target: {name, value}}) => {\n        this.setState({...this.state, [name]: value, error: null})\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        this.setState({\n            ...this.state,\n            captcha_image: undefined,\n        });\n\n        const {track_id, login, password, captcha_answer} = this.state;\n        this.api.generate_token_by_login_and_password(login, password, track_id, captcha_answer).then(token => {\n            window.location.href = `tg://resolve?domain=music_yandex_bot&start=${token}`;\n            this.setState({...this.state, token: token})\n        }).catch(error => {\n            if (error instanceof Captcha) {\n                const {captcha_image_url, track_id} = error.body;\n                this.setState({\n                    ...this.state,\n                    captcha_image_url: captcha_image_url,\n                    track_id: track_id,\n                    error: 'Необходимо пройти капчу',\n                })\n            } else {\n                this.setState({\n                    ...this.state,\n                    error: error.body,\n                });\n            }\n        })\n    };\n\n    render() {\n        const {captcha_image_url, error, token} = this.state;\n        return token ? (\n            <>\n                <a href={`tg://resolve?domain=music_yandex_bot&start=${token}`}>\n                    <Button variant=\"primary\" block>\n                        Перейти в бота\n                    </Button>\n                </a>\n                <small className=\"text-muted \">Если кнопка не работает -\n                    <a href={`${this.mirror}music_yandex_bot?start=${token}`}> перейдите по ссылке</a>\n                </small>\n            </>\n        ) : (\n            <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label column={false}>Введите логин, почту или телефон:</Form.Label>\n                    <Form.Control name=\"username\" onChange={this.handleChange}\n                                  type=\"email\" placeholder=\"Введите логин, почту или телефон\"/>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label column={false}>Введите пароль</Form.Label>\n                    <Form.Control name=\"password\" onChange={this.handleChange}\n                                  type=\"password\" placeholder=\"Введите пароль\"/>\n                </Form.Group>\n\n                {captcha_image_url &&\n                <Form.Group controlId=\"formBasicCaptcha\">\n                    <Row className=\"mb-2\">\n                        <Col><Image fluid src={captcha_image_url}/></Col>\n                        <Col className=\"align-self-center\">\n                            <Button className=\"btn-block\" type=\"submit\" onClick={this.handleSubmit}>\n                                Обновить\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form.Control name=\"captcha_answer\" onChange={this.handleChange}\n                                          type=\"text\" placeholder=\"Введите код с картинки\"/>\n                        </Col>\n                    </Row>\n                </Form.Group>\n                }\n\n                <Button variant=\"primary\" type=\"submit\" block onClick={this.handleSubmit}>\n                    Войти\n                </Button>\n\n                {error &&\n                <p className=\"mt-1 text-danger\">{`${error}`}</p>\n                }\n            </Form>\n        );\n    }\n}\n\nexport default AuthForm;\n","import {Card} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nclass TrustCard extends React.Component {\n    render() {\n        return (\n            <Card className=\"mb-4\">\n                <Card.Header className=\"text-center\">\n                    <FontAwesomeIcon size={this.props.size} icon={this.props.icon} />\n                </Card.Header>\n\n                <Card.Body>\n                    <Card.Title>{this.props.title}</Card.Title>\n                    <Card.Text>{this.props.text}</Card.Text>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nTrustCard.defaultProps = {\n    size: '7x'\n};\n\nexport default TrustCard;\n","import React, {Component} from 'react';\nimport {Badge, CardDeck, Col, Container, Image, Row} from 'react-bootstrap'\nimport AuthForm from \"./AuthForm\";\nimport TrustCard from \"./TrustCard\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Container>\n                <Row className=\"mt-5\">\n                    <Col className=\"d-none d-xl-block col-md-3\"/>\n                    <Col>\n                        <Row>\n                            <Container>\n                                <h4>Яндекс.Музыка - Telegram <Badge variant=\"primary\">Bot</Badge></h4>\n                            </Container>\n                        </Row>\n                        <Row>\n                            <Container>\n                                <Image src=\"logo.png\" width=\"100%\" roundedCircle/>\n                            </Container>\n                        </Row>\n                        <Row>\n                            <Container>\n                                <p>Данный бот позволяет прослушивать плейлист дня и другие умные плейлисты, Ваши личные\n                                    плейлисты, а так же понравившиеся треки. Вы можете лайкать и дизлайкать треки,\n                                    получать текст песен, искать новые музыкальные предпочтения, делиться ими со всеми и\n                                    слушать любимую музыку в мессенджере Telegram.</p>\n                                <p>\n                                    Trello для вопросов и предложений:\n                                    <a href=\"https://trello.com/b/D5f3kRxF\"> Yandex.Music Telegram Bot</a></p>\n                                <p>Канал с обновлениями и новостями:\n                                    <a href=\"tg://resolve?domain=music_yandex_channel\"> @music_yandex_channel</a></p>\n                            </Container>\n                        </Row>\n                    </Col>\n                    <Col className=\"d-none d-xl-block col-md-3\"/>\n                </Row>\n                <Row>\n                    <Col className=\"d-none d-xl-block col-md-3\"/>\n                    <Col>\n                        <AuthForm/>\n                    </Col>\n                    <Col className=\"d-none d-xl-block col-md-3\"/>\n                </Row>\n                <Row className=\"mt-5\">\n                    <Container className=\"justify-content-center \">\n                        <h2 className=\"text-center mb-3\">Причины, по которым нам стоит доверять</h2>\n                        <Row>\n                            <CardDeck>\n                                <TrustCard icon={['fab', 'yandex']} title=\"Напрямую в Яндекс!\"\n                                           text=\"Ваш логин и пароль отправляется с Вашего компьютера сразу на сервера\n                                           Яндекса без каких-либо посредников.\"/>\n                                <TrustCard icon={['fab', 'expeditedssl']} title=\"Используем безопасное соединение!\"\n                                           text=\"Все ваши данные отправляются в зашифрованном виде через протокол HTTPS.\"/>\n                                <TrustCard icon=\"key\" title=\"Не храним ваши пароли!\"\n                                           text=\"На наших серверах хранится только Ваш уникальный токен,\n                                           полученный при авторизации.\"/>\n                            </CardDeck>\n                            <CardDeck>\n                                <TrustCard icon=\"code\" title=\"Открытый исходный код!\"\n                                           text=\"Весь исходный код опубликован в репозитории на GitHub и доступен для\n                                            просмотра.\"/>\n                                <TrustCard icon=\"shield-alt\" title=\"Только официальное приложение!\"\n                                           text=\"Авторизация происходит через OAuth приложение Яндекса используемое в их\n                                           клиентах.\"/>\n                                <TrustCard icon=\"spinner\" title=\"Выполнение в браузере!\"\n                                           text=\"Весь код выполняется в Вашем браузере без возможности вмешательства с\n                                           чьей-либо стороны.\"/>\n                            </CardDeck>\n                        </Row>\n                    </Container>\n                </Row>\n                <hr/>\n                <Row className=\"mb-3\">\n                    <Container>\n                        <Row className=\"d-flex justify-content-between\">\n                            <Col>\n                                <span>Исходный код: <a\n                                    href=\"https://github.com/MarshalX/yandex-music-token\">yandex-music-token</a></span>\n                            </Col>\n                            <Col className=\"text-right\">\n                                <span> Автор: <a href=\"tg://resolve?domain=MarshalX\">@MarshalX</a></span>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fab, far, fas);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}