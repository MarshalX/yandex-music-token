{"version":3,"sources":["Api.js","AuthForm.js","TrustCard.js","App.js","index.js"],"names":["YandexMusicApi","oauth_url","client_id","client_secret","generate_token_by_username_and_password","username","password","x_captcha_answer","x_captcha_key","a","url","data","grant_type","post","then","resp","json","serialize","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","handleCaptcha","errorMessage","includes","CaptchaWrong","CaptchaRequired","fetch","method","body","ok","message","error_description","Error","AuthForm","props","api","handleChange","target","name","value","setState","state","handleCopyClick","event","preventDefault","navigator","clipboard","writeText","token","handleSubmit","x_captcha_url","undefined","window","location","href","catch","error","Link","this","Button","variant","block","onClick","Form","Group","controlId","Control","onChange","type","placeholder","text","Row","className","Col","Image","fluid","src","React","Component","TrustCard","Card","Header","size","icon","Body","style","fontSize","title","Text","defaultProps","children","content","rel","App","Container","width","roundedCircle","CardDeck","xs","span","library","add","fab","far","fas","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc4bda19.chunk.js","sourcesContent":["/**\n * Reference: https://github.com/MarshalX/yandex-music-api/blob/952145c3b8431385f2fe8273d52d8eb4e49fcceb/yandex_music/client.py#L89\n */\nclass YandexMusicApi {\n    oauth_url = 'https://oauth.yandex.com';\n    client_id = '23cabbbdc6cd418abb4b39c32c41195d';\n    client_secret = '53bc75238f0c4d08a118e51fe9203300';\n\n    generate_token_by_username_and_password = async (username, password, x_captcha_answer, x_captcha_key) => {\n        const url = `${this.oauth_url}/token`;\n\n        let data = {\n            grant_type: 'password',\n            client_id: this.client_id,\n            client_secret: this.client_secret,\n            username: username,\n            password: password\n        };\n\n        if (x_captcha_answer && x_captcha_key) {\n            data = {...data, x_captcha_answer, x_captcha_key}\n        }\n\n        return await this.post(url, data)\n            .then(resp => resp.json())\n            .then(json => json['access_token']);\n    };\n\n    serialize = (obj) => {\n        let str = [];\n        for (let p in obj)\n            if (obj.hasOwnProperty(p)) {\n                str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n            }\n        return str.join(\"&\");\n    };\n\n    handleCaptcha = (errorMessage, json) => {\n        if (errorMessage.includes('Wrong')) {\n            throw new CaptchaWrong(json);\n        } else {\n            throw new CaptchaRequired(json);\n        }\n    };\n\n    post = (url, data) => {\n        return fetch(url, {\n            method: 'POST',\n            body: this.serialize(data)\n        }).then(resp => {\n            if (!resp.ok) {\n                return resp.json().then(json => {\n                    let message = json.error_description || 'Unknown HTTP Error';\n                    if (message.includes('CAPTCHA')) {\n                        return this.handleCaptcha(message, json);\n                    } else {\n                        throw new Error(message);\n                    }\n                });\n            }\n            return resp;\n        });\n    };\n}\n\nclass CaptchaRequired extends Error {\n    constructor(body) {\n        super();\n        this.body = body\n    }\n}\n\nclass CaptchaWrong extends Error {\n    constructor(body) {\n        super();\n        this.body = body\n    }\n}\n\nexport {YandexMusicApi};\nexport {CaptchaRequired};\nexport {CaptchaWrong};\n","import {Button, Col, Form, Image, Row} from 'react-bootstrap';\nimport React from 'react';\nimport {CaptchaRequired, CaptchaWrong, YandexMusicApi} from './Api';\n\n\nclass AuthForm extends React.Component {\n  api = new YandexMusicApi();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      error: null,\n      token: null\n    };\n  }\n\n  handleChange = ({target: {name, value}}) => {\n    this.setState({...this.state, [name]: value, error: null});\n  };\n\n  handleCopyClick = (event) => {\n    event.preventDefault();\n\n    if (!navigator.clipboard) {\n      return;\n    }\n\n    navigator.clipboard.writeText(this.state.token);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.setState({\n      ...this.state,\n      x_captcha_url: undefined,\n      x_captcha_key: undefined\n    });\n\n    const {username, password, x_captcha_answer, x_captcha_key} = this.state;\n    this.api.generate_token_by_username_and_password(username, password, x_captcha_answer, x_captcha_key).then(token => {\n      window.location.href = `tg://resolve?domain=music_yandex_bot&start=${token}`;\n      this.setState({...this.state, token: token});\n    }).catch(error => {\n      if (error instanceof CaptchaRequired || error instanceof CaptchaWrong) {\n        const {x_captcha_url, x_captcha_key, error_description} = error.body;\n        this.setState({\n          ...this.state,\n          x_captcha_url,\n          x_captcha_key,\n          error: error_description\n        });\n      } else {\n        this.setState({\n          ...this.state,\n          error\n        });\n      }\n    });\n  };\n\n  render() {\n    const {Link} = this.props;\n    const {x_captcha_url, error, token} = this.state;\n    return token ? (\n      <>\n        <a href={`https://t.me/music_yandex_bot?start=${token}`}>\n          <Button variant=\"primary\" block>\n            Перейти в бота\n          </Button>\n        </a>\n        <a href=\"/#\" onClick={this.handleCopyClick}>Скопировать токен</a>\n      </>\n    ) : (\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Control name=\"username\" onChange={this.handleChange}\n                        type=\"email\" placeholder=\"Логин или email\"/>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Control name=\"password\" onChange={this.handleChange}\n                        type=\"password\" placeholder=\"Введите пароль\"/>\n          <Link url=\"https://passport.yandex.ru/auth/restore/\" text=\"Не помню\"/>\n        </Form.Group>\n\n        {x_captcha_url &&\n          <Form.Group controlId=\"formBasicCaptcha\">\n            <Row className=\"mb-2\">\n              <Col><Image fluid src={x_captcha_url}/></Col>\n              <Col className=\"align-self-center\">\n                <Button className=\"btn-block\" type=\"submit\" onClick={this.handleSubmit}>\n                  Обновить\n                </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Control name=\"x_captcha_answer\" onChange={this.handleChange}\n                              type=\"text\" placeholder=\"Введите код с картинки\"/>\n              </Col>\n            </Row>\n          </Form.Group>\n        }\n\n        {error && <>\n          <p className=\"mt-1 text-danger\">{`${error}`}</p>\n          <p className=\"mt-1 text-info\">\n            Если вы встречаетесь с ошибкой о неправильном пароле, но уверены, что пароль верный, воспользуйтесь для\n            авторизации другим способом:\n\n            <ul>\n              <li><a href=\"https://github.com/MarshalX/yandex-music-token/releases\">Android приложение</a></li>\n              <li><a\n                href=\"https://chrome.google.com/webstore/detail/yandex-music-token/lcbjeookjibfhjjopieifgjnhlegmkib\">Расширение\n                для Google Chrome</a></li>\n              <li><a href=\"https://addons.mozilla.org/en-US/firefox/addon/yandex-music-token/\">Расширение для Mozilla\n                Firefox</a></li>\n            </ul>\n          </p>\n        </>\n        }\n\n        <Button variant=\"primary\" type=\"submit\" block onClick={this.handleSubmit} className=\"mb-1\">\n          Войти\n        </Button>\n        <Link url=\"https://passport.yandex.ru/registration\">\n          <Button variant=\"outline-primary\" block>\n            Создать ID\n          </Button>\n        </Link>\n      </Form>\n    );\n  }\n}\n\nexport default AuthForm;\n","import {Card} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nclass TrustCard extends React.Component {\n    render() {\n        return (\n            <Card className=\"mb-4\">\n                <Card.Header className=\"text-center\">\n                    <FontAwesomeIcon size={this.props.size} icon={this.props.icon} />\n                </Card.Header>\n\n                <Card.Body>\n                    <div className=\"card-title text-center h5\" style={{fontSize: \"1.15rem\"}}>{this.props.title}</div>\n                    <Card.Text className=\"text-center\">{this.props.text}</Card.Text>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nTrustCard.defaultProps = {\n    size: '7x'\n};\n\nexport default TrustCard;\n","import React, {Component} from 'react';\nimport {CardDeck, Col, Container, Image, Row} from 'react-bootstrap'\nimport AuthForm from \"./AuthForm\";\nimport TrustCard from \"./TrustCard\";\n\nclass Link extends Component {\n    render() {\n        const {children, text} = this.props;\n\n        let content = text;\n        if (!content) {\n            content = children;\n        }\n\n        return <a href={this.props.url} target=\"_blank\" rel=\"noreferrer\">{content}</a>\n    }\n}\n\nclass App extends Component {\n    render() {\n        return (\n            <Container>\n                <Row className=\"mt-5\">\n                    <Col className=\"d-none d-xl-block col-md-4\"/>\n                    <Col>\n                        <Row className=\"d-flex justify-content-center\">\n                            <Image src=\"logo.png\" width=\"30%\" roundedCircle/>\n                        </Row>\n                        <Row className=\"d-flex justify-content-center px-5 text-center\">\n                            <p>Полноценный клиент сервиса Яндекс.Музыка в Telegram!</p>\n                        </Row>\n                        <AuthForm Link={Link}/>\n                    </Col>\n                    <Col className=\"d-none d-xl-block col-md-4\"/>\n                </Row>\n                <Row className=\"mt-5\">\n                    <Container className=\"justify-content-center \">\n                        <h2 className=\"text-center mb-3\">Это безопасно потому что мы</h2>\n                        <Row>\n                            <CardDeck className=\"mx-0\">\n                                <TrustCard icon={['fab', 'yandex']} title=\"Отправляем напрямую\"\n                                           text=\"Данные отправляется сразу на сервера\n                                           Яндекс без посредников\"/>\n                                <TrustCard icon={['fab', 'expeditedssl']} title=\"Используем HTTPS\"\n                                           text=\"Вся информация отправляется в зашифрованном виде\"/>\n                                <TrustCard icon=\"key\" title=\"Не храним пароли\"\n                                           text=\"На наших серверах хранится только уникальный токен\"/>\n                                <TrustCard icon=\"code\" title=\"Показываем код\"\n                                           text=\"Весь исходный код опубликован в репозитории на GitHub\"/>\n                                {/*<TrustCard icon=\"shield-alt\" title=\"Официальное приложение\"*/}\n                                {/*           text=\"Авторизация происходит через OAuth приложение Яндекс используемое в их*/}\n                                {/*           собственных клиентах\"/>*/}\n                                {/*<TrustCard icon=\"spinner\" title=\"Выполнение в браузере\"*/}\n                                {/*           text=\"Процесс авторизации выполняется в браузере без возможности вмешательства*/}\n                                {/*           со стороны сервера\"/>*/}\n                            </CardDeck>\n                        </Row>\n                    </Container>\n                </Row>\n                <hr/>\n                <Row className=\"mb-3\">\n                    <Container>\n                        <Row className=\"d-flex justify-content-between\">\n                            <Col xs={{span: \"auto\"}}>\n                                <span>\n                                    Исходный код: <Link text=\"yandex-music-token\" url=\"https://github.com/MarshalX/yandex-music-token\"/>\n                                </span>\n                            </Col>\n                            <Col xs={{span: \"auto\"}} className=\"text-right\">\n                                <span>\n                                    Автор: <Link text=\"@MarshalX\" url=\"https://github.com/MarshalX/\"/>\n                                </span>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fab, far, fas);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}